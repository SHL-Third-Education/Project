// -------------------------------------------------------------
// 
// File Name: /tmp/tpc580e839_93cc_49a5_b11d_c2360b776e0b/hdlcoder_dspprogfir/Discrete_FIR_Filter.v
// Created: 2018-12-14 02:36:23
// 
// Generated by MATLAB 9.4 and HDL Coder 3.12
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Discrete_FIR_Filter
// Source Path: hdlcoder_dspprogfir/Programmable FIR via Registers/Discrete FIR Filter
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Discrete_FIR_Filter
          (clk,
           reset,
           enb,
           Discrete_FIR_Filter_in,
           Discrete_FIR_Filter_coeff_0,
           Discrete_FIR_Filter_coeff_1,
           Discrete_FIR_Filter_coeff_2,
           Discrete_FIR_Filter_coeff_3,
           Discrete_FIR_Filter_coeff_4,
           Discrete_FIR_Filter_coeff_5,
           Discrete_FIR_Filter_coeff_6,
           Discrete_FIR_Filter_coeff_7,
           Discrete_FIR_Filter_coeff_8,
           Discrete_FIR_Filter_coeff_9,
           Discrete_FIR_Filter_coeff_10,
           Discrete_FIR_Filter_coeff_11,
           Discrete_FIR_Filter_coeff_12,
           Discrete_FIR_Filter_coeff_13,
           Discrete_FIR_Filter_coeff_14,
           Discrete_FIR_Filter_coeff_15,
           Discrete_FIR_Filter_coeff_16,
           Discrete_FIR_Filter_coeff_17,
           Discrete_FIR_Filter_coeff_18,
           Discrete_FIR_Filter_coeff_19,
           Discrete_FIR_Filter_coeff_20,
           Discrete_FIR_Filter_coeff_21,
           Discrete_FIR_Filter_coeff_22,
           Discrete_FIR_Filter_coeff_23,
           Discrete_FIR_Filter_coeff_24,
           Discrete_FIR_Filter_coeff_25,
           Discrete_FIR_Filter_coeff_26,
           Discrete_FIR_Filter_coeff_27,
           Discrete_FIR_Filter_coeff_28,
           Discrete_FIR_Filter_coeff_29,
           Discrete_FIR_Filter_coeff_30,
           Discrete_FIR_Filter_coeff_31,
           Discrete_FIR_Filter_coeff_32,
           Discrete_FIR_Filter_coeff_33,
           Discrete_FIR_Filter_coeff_34,
           Discrete_FIR_Filter_coeff_35,
           Discrete_FIR_Filter_coeff_36,
           Discrete_FIR_Filter_coeff_37,
           Discrete_FIR_Filter_coeff_38,
           Discrete_FIR_Filter_coeff_39,
           Discrete_FIR_Filter_coeff_40,
           Discrete_FIR_Filter_coeff_41,
           Discrete_FIR_Filter_coeff_42,
           Discrete_FIR_Filter_out);


  input   clk;
  input   reset;
  input   enb;
  input   signed [13:0] Discrete_FIR_Filter_in;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_0;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_1;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_2;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_3;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_4;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_5;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_6;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_7;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_8;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_9;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_10;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_11;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_12;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_13;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_14;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_15;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_16;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_17;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_18;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_19;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_20;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_21;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_22;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_23;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_24;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_25;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_26;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_27;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_28;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_29;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_30;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_31;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_32;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_33;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_34;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_35;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_36;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_37;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_38;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_39;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_40;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_41;  // sfix14_En13
  input   signed [13:0] Discrete_FIR_Filter_coeff_42;  // sfix14_En13
  output  signed [14:0] Discrete_FIR_Filter_out;  // sfix15_En13


  wire signed [27:0] multiplier_mul_temp;  // sfix28_En26
  wire signed [28:0] product1;  // sfix29_En29
  reg signed [13:0] Delay_Pipeline_reg [0:41];  // sfix14 [42]
  wire signed [13:0] Delay_Pipeline_reg_next [0:41];  // sfix14_En13 [42]
  wire signed [13:0] delay_pipeline_1 [0:41];  // sfix14_En13 [42]
  wire signed [13:0] delay_pipeline_0;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_1;  // sfix28_En26
  wire signed [28:0] product2;  // sfix29_En29
  wire signed [30:0] adder_add_cast;  // sfix31_En29
  wire signed [30:0] adder_add_cast_1;  // sfix31_En29
  wire signed [30:0] sum1;  // sfix31_En29
  wire signed [13:0] delay_pipeline_1_1;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_2;  // sfix28_En26
  wire signed [28:0] product3;  // sfix29_En29
  wire signed [31:0] adder_add_cast_2;  // sfix32_En29
  wire signed [30:0] adder_add_cast_3;  // sfix31_En29
  wire signed [31:0] adder_add_cast_4;  // sfix32_En29
  wire signed [31:0] adder_add_temp;  // sfix32_En29
  wire signed [30:0] sum2;  // sfix31_En29
  wire signed [13:0] delay_pipeline_2;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_3;  // sfix28_En26
  wire signed [28:0] product4;  // sfix29_En29
  wire signed [31:0] adder_add_cast_5;  // sfix32_En29
  wire signed [30:0] adder_add_cast_6;  // sfix31_En29
  wire signed [31:0] adder_add_cast_7;  // sfix32_En29
  wire signed [31:0] adder_add_temp_1;  // sfix32_En29
  wire signed [30:0] sum3;  // sfix31_En29
  wire signed [13:0] delay_pipeline_3;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_4;  // sfix28_En26
  wire signed [28:0] product5;  // sfix29_En29
  wire signed [31:0] adder_add_cast_8;  // sfix32_En29
  wire signed [30:0] adder_add_cast_9;  // sfix31_En29
  wire signed [31:0] adder_add_cast_10;  // sfix32_En29
  wire signed [31:0] adder_add_temp_2;  // sfix32_En29
  wire signed [30:0] sum4;  // sfix31_En29
  wire signed [13:0] delay_pipeline_4;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_5;  // sfix28_En26
  wire signed [28:0] product6;  // sfix29_En29
  wire signed [31:0] adder_add_cast_11;  // sfix32_En29
  wire signed [30:0] adder_add_cast_12;  // sfix31_En29
  wire signed [31:0] adder_add_cast_13;  // sfix32_En29
  wire signed [31:0] adder_add_temp_3;  // sfix32_En29
  wire signed [30:0] sum5;  // sfix31_En29
  wire signed [13:0] delay_pipeline_5;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_6;  // sfix28_En26
  wire signed [28:0] product7;  // sfix29_En29
  wire signed [31:0] adder_add_cast_14;  // sfix32_En29
  wire signed [30:0] adder_add_cast_15;  // sfix31_En29
  wire signed [31:0] adder_add_cast_16;  // sfix32_En29
  wire signed [31:0] adder_add_temp_4;  // sfix32_En29
  wire signed [30:0] sum6;  // sfix31_En29
  wire signed [13:0] delay_pipeline_6;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_7;  // sfix28_En26
  wire signed [28:0] product8;  // sfix29_En29
  wire signed [31:0] adder_add_cast_17;  // sfix32_En29
  wire signed [30:0] adder_add_cast_18;  // sfix31_En29
  wire signed [31:0] adder_add_cast_19;  // sfix32_En29
  wire signed [31:0] adder_add_temp_5;  // sfix32_En29
  wire signed [30:0] sum7;  // sfix31_En29
  wire signed [13:0] delay_pipeline_7;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_8;  // sfix28_En26
  wire signed [28:0] product9;  // sfix29_En29
  wire signed [31:0] adder_add_cast_20;  // sfix32_En29
  wire signed [30:0] adder_add_cast_21;  // sfix31_En29
  wire signed [31:0] adder_add_cast_22;  // sfix32_En29
  wire signed [31:0] adder_add_temp_6;  // sfix32_En29
  wire signed [30:0] sum8;  // sfix31_En29
  wire signed [13:0] delay_pipeline_8;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_9;  // sfix28_En26
  wire signed [28:0] product10;  // sfix29_En29
  wire signed [31:0] adder_add_cast_23;  // sfix32_En29
  wire signed [30:0] adder_add_cast_24;  // sfix31_En29
  wire signed [31:0] adder_add_cast_25;  // sfix32_En29
  wire signed [31:0] adder_add_temp_7;  // sfix32_En29
  wire signed [30:0] sum9;  // sfix31_En29
  wire signed [13:0] delay_pipeline_9;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_10;  // sfix28_En26
  wire signed [28:0] product11;  // sfix29_En29
  wire signed [31:0] adder_add_cast_26;  // sfix32_En29
  wire signed [30:0] adder_add_cast_27;  // sfix31_En29
  wire signed [31:0] adder_add_cast_28;  // sfix32_En29
  wire signed [31:0] adder_add_temp_8;  // sfix32_En29
  wire signed [30:0] sum10;  // sfix31_En29
  wire signed [13:0] delay_pipeline_10;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_11;  // sfix28_En26
  wire signed [28:0] product12;  // sfix29_En29
  wire signed [31:0] adder_add_cast_29;  // sfix32_En29
  wire signed [30:0] adder_add_cast_30;  // sfix31_En29
  wire signed [31:0] adder_add_cast_31;  // sfix32_En29
  wire signed [31:0] adder_add_temp_9;  // sfix32_En29
  wire signed [30:0] sum11;  // sfix31_En29
  wire signed [13:0] delay_pipeline_11;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_12;  // sfix28_En26
  wire signed [28:0] product13;  // sfix29_En29
  wire signed [31:0] adder_add_cast_32;  // sfix32_En29
  wire signed [30:0] adder_add_cast_33;  // sfix31_En29
  wire signed [31:0] adder_add_cast_34;  // sfix32_En29
  wire signed [31:0] adder_add_temp_10;  // sfix32_En29
  wire signed [30:0] sum12;  // sfix31_En29
  wire signed [13:0] delay_pipeline_12;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_13;  // sfix28_En26
  wire signed [28:0] product14;  // sfix29_En29
  wire signed [31:0] adder_add_cast_35;  // sfix32_En29
  wire signed [30:0] adder_add_cast_36;  // sfix31_En29
  wire signed [31:0] adder_add_cast_37;  // sfix32_En29
  wire signed [31:0] adder_add_temp_11;  // sfix32_En29
  wire signed [30:0] sum13;  // sfix31_En29
  wire signed [13:0] delay_pipeline_13;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_14;  // sfix28_En26
  wire signed [28:0] product15;  // sfix29_En29
  wire signed [31:0] adder_add_cast_38;  // sfix32_En29
  wire signed [30:0] adder_add_cast_39;  // sfix31_En29
  wire signed [31:0] adder_add_cast_40;  // sfix32_En29
  wire signed [31:0] adder_add_temp_12;  // sfix32_En29
  wire signed [30:0] sum14;  // sfix31_En29
  wire signed [13:0] delay_pipeline_14;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_15;  // sfix28_En26
  wire signed [28:0] product16;  // sfix29_En29
  wire signed [31:0] adder_add_cast_41;  // sfix32_En29
  wire signed [30:0] adder_add_cast_42;  // sfix31_En29
  wire signed [31:0] adder_add_cast_43;  // sfix32_En29
  wire signed [31:0] adder_add_temp_13;  // sfix32_En29
  wire signed [30:0] sum15;  // sfix31_En29
  wire signed [13:0] delay_pipeline_15;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_16;  // sfix28_En26
  wire signed [28:0] product17;  // sfix29_En29
  wire signed [31:0] adder_add_cast_44;  // sfix32_En29
  wire signed [30:0] adder_add_cast_45;  // sfix31_En29
  wire signed [31:0] adder_add_cast_46;  // sfix32_En29
  wire signed [31:0] adder_add_temp_14;  // sfix32_En29
  wire signed [30:0] sum16;  // sfix31_En29
  wire signed [13:0] delay_pipeline_16;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_17;  // sfix28_En26
  wire signed [28:0] product18;  // sfix29_En29
  wire signed [31:0] adder_add_cast_47;  // sfix32_En29
  wire signed [30:0] adder_add_cast_48;  // sfix31_En29
  wire signed [31:0] adder_add_cast_49;  // sfix32_En29
  wire signed [31:0] adder_add_temp_15;  // sfix32_En29
  wire signed [30:0] sum17;  // sfix31_En29
  wire signed [13:0] delay_pipeline_17;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_18;  // sfix28_En26
  wire signed [28:0] product19;  // sfix29_En29
  wire signed [31:0] adder_add_cast_50;  // sfix32_En29
  wire signed [30:0] adder_add_cast_51;  // sfix31_En29
  wire signed [31:0] adder_add_cast_52;  // sfix32_En29
  wire signed [31:0] adder_add_temp_16;  // sfix32_En29
  wire signed [30:0] sum18;  // sfix31_En29
  wire signed [13:0] delay_pipeline_18;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_19;  // sfix28_En26
  wire signed [28:0] product20;  // sfix29_En29
  wire signed [31:0] adder_add_cast_53;  // sfix32_En29
  wire signed [30:0] adder_add_cast_54;  // sfix31_En29
  wire signed [31:0] adder_add_cast_55;  // sfix32_En29
  wire signed [31:0] adder_add_temp_17;  // sfix32_En29
  wire signed [30:0] sum19;  // sfix31_En29
  wire signed [13:0] delay_pipeline_19;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_20;  // sfix28_En26
  wire signed [28:0] product21;  // sfix29_En29
  wire signed [31:0] adder_add_cast_56;  // sfix32_En29
  wire signed [30:0] adder_add_cast_57;  // sfix31_En29
  wire signed [31:0] adder_add_cast_58;  // sfix32_En29
  wire signed [31:0] adder_add_temp_18;  // sfix32_En29
  wire signed [30:0] sum20;  // sfix31_En29
  wire signed [13:0] delay_pipeline_20;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_21;  // sfix28_En26
  wire signed [28:0] product22;  // sfix29_En29
  wire signed [31:0] adder_add_cast_59;  // sfix32_En29
  wire signed [30:0] adder_add_cast_60;  // sfix31_En29
  wire signed [31:0] adder_add_cast_61;  // sfix32_En29
  wire signed [31:0] adder_add_temp_19;  // sfix32_En29
  wire signed [30:0] sum21;  // sfix31_En29
  wire signed [13:0] delay_pipeline_21;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_22;  // sfix28_En26
  wire signed [28:0] product23;  // sfix29_En29
  wire signed [31:0] adder_add_cast_62;  // sfix32_En29
  wire signed [30:0] adder_add_cast_63;  // sfix31_En29
  wire signed [31:0] adder_add_cast_64;  // sfix32_En29
  wire signed [31:0] adder_add_temp_20;  // sfix32_En29
  wire signed [30:0] sum22;  // sfix31_En29
  wire signed [13:0] delay_pipeline_22;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_23;  // sfix28_En26
  wire signed [28:0] product24;  // sfix29_En29
  wire signed [31:0] adder_add_cast_65;  // sfix32_En29
  wire signed [30:0] adder_add_cast_66;  // sfix31_En29
  wire signed [31:0] adder_add_cast_67;  // sfix32_En29
  wire signed [31:0] adder_add_temp_21;  // sfix32_En29
  wire signed [30:0] sum23;  // sfix31_En29
  wire signed [13:0] delay_pipeline_23;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_24;  // sfix28_En26
  wire signed [28:0] product25;  // sfix29_En29
  wire signed [31:0] adder_add_cast_68;  // sfix32_En29
  wire signed [30:0] adder_add_cast_69;  // sfix31_En29
  wire signed [31:0] adder_add_cast_70;  // sfix32_En29
  wire signed [31:0] adder_add_temp_22;  // sfix32_En29
  wire signed [30:0] sum24;  // sfix31_En29
  wire signed [13:0] delay_pipeline_24;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_25;  // sfix28_En26
  wire signed [28:0] product26;  // sfix29_En29
  wire signed [31:0] adder_add_cast_71;  // sfix32_En29
  wire signed [30:0] adder_add_cast_72;  // sfix31_En29
  wire signed [31:0] adder_add_cast_73;  // sfix32_En29
  wire signed [31:0] adder_add_temp_23;  // sfix32_En29
  wire signed [30:0] sum25;  // sfix31_En29
  wire signed [13:0] delay_pipeline_25;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_26;  // sfix28_En26
  wire signed [28:0] product27;  // sfix29_En29
  wire signed [31:0] adder_add_cast_74;  // sfix32_En29
  wire signed [30:0] adder_add_cast_75;  // sfix31_En29
  wire signed [31:0] adder_add_cast_76;  // sfix32_En29
  wire signed [31:0] adder_add_temp_24;  // sfix32_En29
  wire signed [30:0] sum26;  // sfix31_En29
  wire signed [13:0] delay_pipeline_26;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_27;  // sfix28_En26
  wire signed [28:0] product28;  // sfix29_En29
  wire signed [31:0] adder_add_cast_77;  // sfix32_En29
  wire signed [30:0] adder_add_cast_78;  // sfix31_En29
  wire signed [31:0] adder_add_cast_79;  // sfix32_En29
  wire signed [31:0] adder_add_temp_25;  // sfix32_En29
  wire signed [30:0] sum27;  // sfix31_En29
  wire signed [13:0] delay_pipeline_27;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_28;  // sfix28_En26
  wire signed [28:0] product29;  // sfix29_En29
  wire signed [31:0] adder_add_cast_80;  // sfix32_En29
  wire signed [30:0] adder_add_cast_81;  // sfix31_En29
  wire signed [31:0] adder_add_cast_82;  // sfix32_En29
  wire signed [31:0] adder_add_temp_26;  // sfix32_En29
  wire signed [30:0] sum28;  // sfix31_En29
  wire signed [13:0] delay_pipeline_28;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_29;  // sfix28_En26
  wire signed [28:0] product30;  // sfix29_En29
  wire signed [31:0] adder_add_cast_83;  // sfix32_En29
  wire signed [30:0] adder_add_cast_84;  // sfix31_En29
  wire signed [31:0] adder_add_cast_85;  // sfix32_En29
  wire signed [31:0] adder_add_temp_27;  // sfix32_En29
  wire signed [30:0] sum29;  // sfix31_En29
  wire signed [13:0] delay_pipeline_29;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_30;  // sfix28_En26
  wire signed [28:0] product31;  // sfix29_En29
  wire signed [31:0] adder_add_cast_86;  // sfix32_En29
  wire signed [30:0] adder_add_cast_87;  // sfix31_En29
  wire signed [31:0] adder_add_cast_88;  // sfix32_En29
  wire signed [31:0] adder_add_temp_28;  // sfix32_En29
  wire signed [30:0] sum30;  // sfix31_En29
  wire signed [13:0] delay_pipeline_30;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_31;  // sfix28_En26
  wire signed [28:0] product32;  // sfix29_En29
  wire signed [31:0] adder_add_cast_89;  // sfix32_En29
  wire signed [30:0] adder_add_cast_90;  // sfix31_En29
  wire signed [31:0] adder_add_cast_91;  // sfix32_En29
  wire signed [31:0] adder_add_temp_29;  // sfix32_En29
  wire signed [30:0] sum31;  // sfix31_En29
  wire signed [13:0] delay_pipeline_31;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_32;  // sfix28_En26
  wire signed [28:0] product33;  // sfix29_En29
  wire signed [31:0] adder_add_cast_92;  // sfix32_En29
  wire signed [30:0] adder_add_cast_93;  // sfix31_En29
  wire signed [31:0] adder_add_cast_94;  // sfix32_En29
  wire signed [31:0] adder_add_temp_30;  // sfix32_En29
  wire signed [30:0] sum32;  // sfix31_En29
  wire signed [13:0] delay_pipeline_32;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_33;  // sfix28_En26
  wire signed [28:0] product34;  // sfix29_En29
  wire signed [31:0] adder_add_cast_95;  // sfix32_En29
  wire signed [30:0] adder_add_cast_96;  // sfix31_En29
  wire signed [31:0] adder_add_cast_97;  // sfix32_En29
  wire signed [31:0] adder_add_temp_31;  // sfix32_En29
  wire signed [30:0] sum33;  // sfix31_En29
  wire signed [13:0] delay_pipeline_33;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_34;  // sfix28_En26
  wire signed [28:0] product35;  // sfix29_En29
  wire signed [31:0] adder_add_cast_98;  // sfix32_En29
  wire signed [30:0] adder_add_cast_99;  // sfix31_En29
  wire signed [31:0] adder_add_cast_100;  // sfix32_En29
  wire signed [31:0] adder_add_temp_32;  // sfix32_En29
  wire signed [30:0] sum34;  // sfix31_En29
  wire signed [13:0] delay_pipeline_34;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_35;  // sfix28_En26
  wire signed [28:0] product36;  // sfix29_En29
  wire signed [31:0] adder_add_cast_101;  // sfix32_En29
  wire signed [30:0] adder_add_cast_102;  // sfix31_En29
  wire signed [31:0] adder_add_cast_103;  // sfix32_En29
  wire signed [31:0] adder_add_temp_33;  // sfix32_En29
  wire signed [30:0] sum35;  // sfix31_En29
  wire signed [13:0] delay_pipeline_35;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_36;  // sfix28_En26
  wire signed [28:0] product37;  // sfix29_En29
  wire signed [31:0] adder_add_cast_104;  // sfix32_En29
  wire signed [30:0] adder_add_cast_105;  // sfix31_En29
  wire signed [31:0] adder_add_cast_106;  // sfix32_En29
  wire signed [31:0] adder_add_temp_34;  // sfix32_En29
  wire signed [30:0] sum36;  // sfix31_En29
  wire signed [13:0] delay_pipeline_36;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_37;  // sfix28_En26
  wire signed [28:0] product38;  // sfix29_En29
  wire signed [31:0] adder_add_cast_107;  // sfix32_En29
  wire signed [30:0] adder_add_cast_108;  // sfix31_En29
  wire signed [31:0] adder_add_cast_109;  // sfix32_En29
  wire signed [31:0] adder_add_temp_35;  // sfix32_En29
  wire signed [30:0] sum37;  // sfix31_En29
  wire signed [13:0] delay_pipeline_37;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_38;  // sfix28_En26
  wire signed [28:0] product39;  // sfix29_En29
  wire signed [31:0] adder_add_cast_110;  // sfix32_En29
  wire signed [30:0] adder_add_cast_111;  // sfix31_En29
  wire signed [31:0] adder_add_cast_112;  // sfix32_En29
  wire signed [31:0] adder_add_temp_36;  // sfix32_En29
  wire signed [30:0] sum38;  // sfix31_En29
  wire signed [13:0] delay_pipeline_38;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_39;  // sfix28_En26
  wire signed [28:0] product40;  // sfix29_En29
  wire signed [31:0] adder_add_cast_113;  // sfix32_En29
  wire signed [30:0] adder_add_cast_114;  // sfix31_En29
  wire signed [31:0] adder_add_cast_115;  // sfix32_En29
  wire signed [31:0] adder_add_temp_37;  // sfix32_En29
  wire signed [30:0] sum39;  // sfix31_En29
  wire signed [13:0] delay_pipeline_39;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_40;  // sfix28_En26
  wire signed [28:0] product41;  // sfix29_En29
  wire signed [31:0] adder_add_cast_116;  // sfix32_En29
  wire signed [30:0] adder_add_cast_117;  // sfix31_En29
  wire signed [31:0] adder_add_cast_118;  // sfix32_En29
  wire signed [31:0] adder_add_temp_38;  // sfix32_En29
  wire signed [30:0] sum40;  // sfix31_En29
  wire signed [13:0] delay_pipeline_40;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_41;  // sfix28_En26
  wire signed [28:0] product42;  // sfix29_En29
  wire signed [31:0] adder_add_cast_119;  // sfix32_En29
  wire signed [30:0] adder_add_cast_120;  // sfix31_En29
  wire signed [31:0] adder_add_cast_121;  // sfix32_En29
  wire signed [31:0] adder_add_temp_39;  // sfix32_En29
  wire signed [30:0] sum41;  // sfix31_En29
  wire signed [13:0] delay_pipeline_41;  // sfix14_En13
  wire signed [27:0] multiplier_mul_temp_42;  // sfix28_En26
  wire signed [28:0] product43;  // sfix29_En29
  wire signed [31:0] adder_add_cast_122;  // sfix32_En29
  wire signed [30:0] adder_add_cast_123;  // sfix31_En29
  wire signed [31:0] adder_add_cast_124;  // sfix32_En29
  wire signed [31:0] adder_add_temp_40;  // sfix32_En29
  wire signed [30:0] sum42;  // sfix31_En29
  wire signed [14:0] output_typeconvert;  // sfix15_En13


  assign multiplier_mul_temp = Discrete_FIR_Filter_in * Discrete_FIR_Filter_coeff_0;
  assign product1 = ((multiplier_mul_temp[27] == 1'b0) && (multiplier_mul_temp[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp[27] == 1'b1) && (multiplier_mul_temp[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp[25:0], 3'b000}));



  always @(posedge clk or posedge reset)
    begin : Delay_Pipeline_process
      if (reset == 1'b1) begin
        Delay_Pipeline_reg[0] <= 14'sb00000000000000;
        Delay_Pipeline_reg[1] <= 14'sb00000000000000;
        Delay_Pipeline_reg[2] <= 14'sb00000000000000;
        Delay_Pipeline_reg[3] <= 14'sb00000000000000;
        Delay_Pipeline_reg[4] <= 14'sb00000000000000;
        Delay_Pipeline_reg[5] <= 14'sb00000000000000;
        Delay_Pipeline_reg[6] <= 14'sb00000000000000;
        Delay_Pipeline_reg[7] <= 14'sb00000000000000;
        Delay_Pipeline_reg[8] <= 14'sb00000000000000;
        Delay_Pipeline_reg[9] <= 14'sb00000000000000;
        Delay_Pipeline_reg[10] <= 14'sb00000000000000;
        Delay_Pipeline_reg[11] <= 14'sb00000000000000;
        Delay_Pipeline_reg[12] <= 14'sb00000000000000;
        Delay_Pipeline_reg[13] <= 14'sb00000000000000;
        Delay_Pipeline_reg[14] <= 14'sb00000000000000;
        Delay_Pipeline_reg[15] <= 14'sb00000000000000;
        Delay_Pipeline_reg[16] <= 14'sb00000000000000;
        Delay_Pipeline_reg[17] <= 14'sb00000000000000;
        Delay_Pipeline_reg[18] <= 14'sb00000000000000;
        Delay_Pipeline_reg[19] <= 14'sb00000000000000;
        Delay_Pipeline_reg[20] <= 14'sb00000000000000;
        Delay_Pipeline_reg[21] <= 14'sb00000000000000;
        Delay_Pipeline_reg[22] <= 14'sb00000000000000;
        Delay_Pipeline_reg[23] <= 14'sb00000000000000;
        Delay_Pipeline_reg[24] <= 14'sb00000000000000;
        Delay_Pipeline_reg[25] <= 14'sb00000000000000;
        Delay_Pipeline_reg[26] <= 14'sb00000000000000;
        Delay_Pipeline_reg[27] <= 14'sb00000000000000;
        Delay_Pipeline_reg[28] <= 14'sb00000000000000;
        Delay_Pipeline_reg[29] <= 14'sb00000000000000;
        Delay_Pipeline_reg[30] <= 14'sb00000000000000;
        Delay_Pipeline_reg[31] <= 14'sb00000000000000;
        Delay_Pipeline_reg[32] <= 14'sb00000000000000;
        Delay_Pipeline_reg[33] <= 14'sb00000000000000;
        Delay_Pipeline_reg[34] <= 14'sb00000000000000;
        Delay_Pipeline_reg[35] <= 14'sb00000000000000;
        Delay_Pipeline_reg[36] <= 14'sb00000000000000;
        Delay_Pipeline_reg[37] <= 14'sb00000000000000;
        Delay_Pipeline_reg[38] <= 14'sb00000000000000;
        Delay_Pipeline_reg[39] <= 14'sb00000000000000;
        Delay_Pipeline_reg[40] <= 14'sb00000000000000;
        Delay_Pipeline_reg[41] <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          Delay_Pipeline_reg[0] <= Delay_Pipeline_reg_next[0];
          Delay_Pipeline_reg[1] <= Delay_Pipeline_reg_next[1];
          Delay_Pipeline_reg[2] <= Delay_Pipeline_reg_next[2];
          Delay_Pipeline_reg[3] <= Delay_Pipeline_reg_next[3];
          Delay_Pipeline_reg[4] <= Delay_Pipeline_reg_next[4];
          Delay_Pipeline_reg[5] <= Delay_Pipeline_reg_next[5];
          Delay_Pipeline_reg[6] <= Delay_Pipeline_reg_next[6];
          Delay_Pipeline_reg[7] <= Delay_Pipeline_reg_next[7];
          Delay_Pipeline_reg[8] <= Delay_Pipeline_reg_next[8];
          Delay_Pipeline_reg[9] <= Delay_Pipeline_reg_next[9];
          Delay_Pipeline_reg[10] <= Delay_Pipeline_reg_next[10];
          Delay_Pipeline_reg[11] <= Delay_Pipeline_reg_next[11];
          Delay_Pipeline_reg[12] <= Delay_Pipeline_reg_next[12];
          Delay_Pipeline_reg[13] <= Delay_Pipeline_reg_next[13];
          Delay_Pipeline_reg[14] <= Delay_Pipeline_reg_next[14];
          Delay_Pipeline_reg[15] <= Delay_Pipeline_reg_next[15];
          Delay_Pipeline_reg[16] <= Delay_Pipeline_reg_next[16];
          Delay_Pipeline_reg[17] <= Delay_Pipeline_reg_next[17];
          Delay_Pipeline_reg[18] <= Delay_Pipeline_reg_next[18];
          Delay_Pipeline_reg[19] <= Delay_Pipeline_reg_next[19];
          Delay_Pipeline_reg[20] <= Delay_Pipeline_reg_next[20];
          Delay_Pipeline_reg[21] <= Delay_Pipeline_reg_next[21];
          Delay_Pipeline_reg[22] <= Delay_Pipeline_reg_next[22];
          Delay_Pipeline_reg[23] <= Delay_Pipeline_reg_next[23];
          Delay_Pipeline_reg[24] <= Delay_Pipeline_reg_next[24];
          Delay_Pipeline_reg[25] <= Delay_Pipeline_reg_next[25];
          Delay_Pipeline_reg[26] <= Delay_Pipeline_reg_next[26];
          Delay_Pipeline_reg[27] <= Delay_Pipeline_reg_next[27];
          Delay_Pipeline_reg[28] <= Delay_Pipeline_reg_next[28];
          Delay_Pipeline_reg[29] <= Delay_Pipeline_reg_next[29];
          Delay_Pipeline_reg[30] <= Delay_Pipeline_reg_next[30];
          Delay_Pipeline_reg[31] <= Delay_Pipeline_reg_next[31];
          Delay_Pipeline_reg[32] <= Delay_Pipeline_reg_next[32];
          Delay_Pipeline_reg[33] <= Delay_Pipeline_reg_next[33];
          Delay_Pipeline_reg[34] <= Delay_Pipeline_reg_next[34];
          Delay_Pipeline_reg[35] <= Delay_Pipeline_reg_next[35];
          Delay_Pipeline_reg[36] <= Delay_Pipeline_reg_next[36];
          Delay_Pipeline_reg[37] <= Delay_Pipeline_reg_next[37];
          Delay_Pipeline_reg[38] <= Delay_Pipeline_reg_next[38];
          Delay_Pipeline_reg[39] <= Delay_Pipeline_reg_next[39];
          Delay_Pipeline_reg[40] <= Delay_Pipeline_reg_next[40];
          Delay_Pipeline_reg[41] <= Delay_Pipeline_reg_next[41];
        end
      end
    end

  assign delay_pipeline_1[0] = Delay_Pipeline_reg[0];
  assign delay_pipeline_1[1] = Delay_Pipeline_reg[1];
  assign delay_pipeline_1[2] = Delay_Pipeline_reg[2];
  assign delay_pipeline_1[3] = Delay_Pipeline_reg[3];
  assign delay_pipeline_1[4] = Delay_Pipeline_reg[4];
  assign delay_pipeline_1[5] = Delay_Pipeline_reg[5];
  assign delay_pipeline_1[6] = Delay_Pipeline_reg[6];
  assign delay_pipeline_1[7] = Delay_Pipeline_reg[7];
  assign delay_pipeline_1[8] = Delay_Pipeline_reg[8];
  assign delay_pipeline_1[9] = Delay_Pipeline_reg[9];
  assign delay_pipeline_1[10] = Delay_Pipeline_reg[10];
  assign delay_pipeline_1[11] = Delay_Pipeline_reg[11];
  assign delay_pipeline_1[12] = Delay_Pipeline_reg[12];
  assign delay_pipeline_1[13] = Delay_Pipeline_reg[13];
  assign delay_pipeline_1[14] = Delay_Pipeline_reg[14];
  assign delay_pipeline_1[15] = Delay_Pipeline_reg[15];
  assign delay_pipeline_1[16] = Delay_Pipeline_reg[16];
  assign delay_pipeline_1[17] = Delay_Pipeline_reg[17];
  assign delay_pipeline_1[18] = Delay_Pipeline_reg[18];
  assign delay_pipeline_1[19] = Delay_Pipeline_reg[19];
  assign delay_pipeline_1[20] = Delay_Pipeline_reg[20];
  assign delay_pipeline_1[21] = Delay_Pipeline_reg[21];
  assign delay_pipeline_1[22] = Delay_Pipeline_reg[22];
  assign delay_pipeline_1[23] = Delay_Pipeline_reg[23];
  assign delay_pipeline_1[24] = Delay_Pipeline_reg[24];
  assign delay_pipeline_1[25] = Delay_Pipeline_reg[25];
  assign delay_pipeline_1[26] = Delay_Pipeline_reg[26];
  assign delay_pipeline_1[27] = Delay_Pipeline_reg[27];
  assign delay_pipeline_1[28] = Delay_Pipeline_reg[28];
  assign delay_pipeline_1[29] = Delay_Pipeline_reg[29];
  assign delay_pipeline_1[30] = Delay_Pipeline_reg[30];
  assign delay_pipeline_1[31] = Delay_Pipeline_reg[31];
  assign delay_pipeline_1[32] = Delay_Pipeline_reg[32];
  assign delay_pipeline_1[33] = Delay_Pipeline_reg[33];
  assign delay_pipeline_1[34] = Delay_Pipeline_reg[34];
  assign delay_pipeline_1[35] = Delay_Pipeline_reg[35];
  assign delay_pipeline_1[36] = Delay_Pipeline_reg[36];
  assign delay_pipeline_1[37] = Delay_Pipeline_reg[37];
  assign delay_pipeline_1[38] = Delay_Pipeline_reg[38];
  assign delay_pipeline_1[39] = Delay_Pipeline_reg[39];
  assign delay_pipeline_1[40] = Delay_Pipeline_reg[40];
  assign delay_pipeline_1[41] = Delay_Pipeline_reg[41];
  assign Delay_Pipeline_reg_next[0] = Discrete_FIR_Filter_in;
  assign Delay_Pipeline_reg_next[1] = Delay_Pipeline_reg[0];
  assign Delay_Pipeline_reg_next[2] = Delay_Pipeline_reg[1];
  assign Delay_Pipeline_reg_next[3] = Delay_Pipeline_reg[2];
  assign Delay_Pipeline_reg_next[4] = Delay_Pipeline_reg[3];
  assign Delay_Pipeline_reg_next[5] = Delay_Pipeline_reg[4];
  assign Delay_Pipeline_reg_next[6] = Delay_Pipeline_reg[5];
  assign Delay_Pipeline_reg_next[7] = Delay_Pipeline_reg[6];
  assign Delay_Pipeline_reg_next[8] = Delay_Pipeline_reg[7];
  assign Delay_Pipeline_reg_next[9] = Delay_Pipeline_reg[8];
  assign Delay_Pipeline_reg_next[10] = Delay_Pipeline_reg[9];
  assign Delay_Pipeline_reg_next[11] = Delay_Pipeline_reg[10];
  assign Delay_Pipeline_reg_next[12] = Delay_Pipeline_reg[11];
  assign Delay_Pipeline_reg_next[13] = Delay_Pipeline_reg[12];
  assign Delay_Pipeline_reg_next[14] = Delay_Pipeline_reg[13];
  assign Delay_Pipeline_reg_next[15] = Delay_Pipeline_reg[14];
  assign Delay_Pipeline_reg_next[16] = Delay_Pipeline_reg[15];
  assign Delay_Pipeline_reg_next[17] = Delay_Pipeline_reg[16];
  assign Delay_Pipeline_reg_next[18] = Delay_Pipeline_reg[17];
  assign Delay_Pipeline_reg_next[19] = Delay_Pipeline_reg[18];
  assign Delay_Pipeline_reg_next[20] = Delay_Pipeline_reg[19];
  assign Delay_Pipeline_reg_next[21] = Delay_Pipeline_reg[20];
  assign Delay_Pipeline_reg_next[22] = Delay_Pipeline_reg[21];
  assign Delay_Pipeline_reg_next[23] = Delay_Pipeline_reg[22];
  assign Delay_Pipeline_reg_next[24] = Delay_Pipeline_reg[23];
  assign Delay_Pipeline_reg_next[25] = Delay_Pipeline_reg[24];
  assign Delay_Pipeline_reg_next[26] = Delay_Pipeline_reg[25];
  assign Delay_Pipeline_reg_next[27] = Delay_Pipeline_reg[26];
  assign Delay_Pipeline_reg_next[28] = Delay_Pipeline_reg[27];
  assign Delay_Pipeline_reg_next[29] = Delay_Pipeline_reg[28];
  assign Delay_Pipeline_reg_next[30] = Delay_Pipeline_reg[29];
  assign Delay_Pipeline_reg_next[31] = Delay_Pipeline_reg[30];
  assign Delay_Pipeline_reg_next[32] = Delay_Pipeline_reg[31];
  assign Delay_Pipeline_reg_next[33] = Delay_Pipeline_reg[32];
  assign Delay_Pipeline_reg_next[34] = Delay_Pipeline_reg[33];
  assign Delay_Pipeline_reg_next[35] = Delay_Pipeline_reg[34];
  assign Delay_Pipeline_reg_next[36] = Delay_Pipeline_reg[35];
  assign Delay_Pipeline_reg_next[37] = Delay_Pipeline_reg[36];
  assign Delay_Pipeline_reg_next[38] = Delay_Pipeline_reg[37];
  assign Delay_Pipeline_reg_next[39] = Delay_Pipeline_reg[38];
  assign Delay_Pipeline_reg_next[40] = Delay_Pipeline_reg[39];
  assign Delay_Pipeline_reg_next[41] = Delay_Pipeline_reg[40];



  assign delay_pipeline_0 = delay_pipeline_1[0];

  assign multiplier_mul_temp_1 = delay_pipeline_0 * Discrete_FIR_Filter_coeff_1;
  assign product2 = ((multiplier_mul_temp_1[27] == 1'b0) && (multiplier_mul_temp_1[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_1[27] == 1'b1) && (multiplier_mul_temp_1[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_1[25:0], 3'b000}));



  assign adder_add_cast = {{2{product1[28]}}, product1};
  assign adder_add_cast_1 = {{2{product2[28]}}, product2};
  assign sum1 = adder_add_cast + adder_add_cast_1;



  assign delay_pipeline_1_1 = delay_pipeline_1[1];

  assign multiplier_mul_temp_2 = delay_pipeline_1_1 * Discrete_FIR_Filter_coeff_2;
  assign product3 = ((multiplier_mul_temp_2[27] == 1'b0) && (multiplier_mul_temp_2[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_2[27] == 1'b1) && (multiplier_mul_temp_2[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_2[25:0], 3'b000}));



  assign adder_add_cast_2 = {sum1[30], sum1};
  assign adder_add_cast_3 = {{2{product3[28]}}, product3};
  assign adder_add_cast_4 = {adder_add_cast_3[30], adder_add_cast_3};
  assign adder_add_temp = adder_add_cast_2 + adder_add_cast_4;
  assign sum2 = ((adder_add_temp[31] == 1'b0) && (adder_add_temp[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp[31] == 1'b1) && (adder_add_temp[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp[30:0])));



  assign delay_pipeline_2 = delay_pipeline_1[2];

  assign multiplier_mul_temp_3 = delay_pipeline_2 * Discrete_FIR_Filter_coeff_3;
  assign product4 = ((multiplier_mul_temp_3[27] == 1'b0) && (multiplier_mul_temp_3[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_3[27] == 1'b1) && (multiplier_mul_temp_3[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_3[25:0], 3'b000}));



  assign adder_add_cast_5 = {sum2[30], sum2};
  assign adder_add_cast_6 = {{2{product4[28]}}, product4};
  assign adder_add_cast_7 = {adder_add_cast_6[30], adder_add_cast_6};
  assign adder_add_temp_1 = adder_add_cast_5 + adder_add_cast_7;
  assign sum3 = ((adder_add_temp_1[31] == 1'b0) && (adder_add_temp_1[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_1[31] == 1'b1) && (adder_add_temp_1[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_1[30:0])));



  assign delay_pipeline_3 = delay_pipeline_1[3];

  assign multiplier_mul_temp_4 = delay_pipeline_3 * Discrete_FIR_Filter_coeff_4;
  assign product5 = ((multiplier_mul_temp_4[27] == 1'b0) && (multiplier_mul_temp_4[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_4[27] == 1'b1) && (multiplier_mul_temp_4[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_4[25:0], 3'b000}));



  assign adder_add_cast_8 = {sum3[30], sum3};
  assign adder_add_cast_9 = {{2{product5[28]}}, product5};
  assign adder_add_cast_10 = {adder_add_cast_9[30], adder_add_cast_9};
  assign adder_add_temp_2 = adder_add_cast_8 + adder_add_cast_10;
  assign sum4 = ((adder_add_temp_2[31] == 1'b0) && (adder_add_temp_2[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_2[31] == 1'b1) && (adder_add_temp_2[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_2[30:0])));



  assign delay_pipeline_4 = delay_pipeline_1[4];

  assign multiplier_mul_temp_5 = delay_pipeline_4 * Discrete_FIR_Filter_coeff_5;
  assign product6 = ((multiplier_mul_temp_5[27] == 1'b0) && (multiplier_mul_temp_5[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_5[27] == 1'b1) && (multiplier_mul_temp_5[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_5[25:0], 3'b000}));



  assign adder_add_cast_11 = {sum4[30], sum4};
  assign adder_add_cast_12 = {{2{product6[28]}}, product6};
  assign adder_add_cast_13 = {adder_add_cast_12[30], adder_add_cast_12};
  assign adder_add_temp_3 = adder_add_cast_11 + adder_add_cast_13;
  assign sum5 = ((adder_add_temp_3[31] == 1'b0) && (adder_add_temp_3[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_3[31] == 1'b1) && (adder_add_temp_3[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_3[30:0])));



  assign delay_pipeline_5 = delay_pipeline_1[5];

  assign multiplier_mul_temp_6 = delay_pipeline_5 * Discrete_FIR_Filter_coeff_6;
  assign product7 = ((multiplier_mul_temp_6[27] == 1'b0) && (multiplier_mul_temp_6[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_6[27] == 1'b1) && (multiplier_mul_temp_6[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_6[25:0], 3'b000}));



  assign adder_add_cast_14 = {sum5[30], sum5};
  assign adder_add_cast_15 = {{2{product7[28]}}, product7};
  assign adder_add_cast_16 = {adder_add_cast_15[30], adder_add_cast_15};
  assign adder_add_temp_4 = adder_add_cast_14 + adder_add_cast_16;
  assign sum6 = ((adder_add_temp_4[31] == 1'b0) && (adder_add_temp_4[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_4[31] == 1'b1) && (adder_add_temp_4[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_4[30:0])));



  assign delay_pipeline_6 = delay_pipeline_1[6];

  assign multiplier_mul_temp_7 = delay_pipeline_6 * Discrete_FIR_Filter_coeff_7;
  assign product8 = ((multiplier_mul_temp_7[27] == 1'b0) && (multiplier_mul_temp_7[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_7[27] == 1'b1) && (multiplier_mul_temp_7[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_7[25:0], 3'b000}));



  assign adder_add_cast_17 = {sum6[30], sum6};
  assign adder_add_cast_18 = {{2{product8[28]}}, product8};
  assign adder_add_cast_19 = {adder_add_cast_18[30], adder_add_cast_18};
  assign adder_add_temp_5 = adder_add_cast_17 + adder_add_cast_19;
  assign sum7 = ((adder_add_temp_5[31] == 1'b0) && (adder_add_temp_5[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_5[31] == 1'b1) && (adder_add_temp_5[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_5[30:0])));



  assign delay_pipeline_7 = delay_pipeline_1[7];

  assign multiplier_mul_temp_8 = delay_pipeline_7 * Discrete_FIR_Filter_coeff_8;
  assign product9 = ((multiplier_mul_temp_8[27] == 1'b0) && (multiplier_mul_temp_8[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_8[27] == 1'b1) && (multiplier_mul_temp_8[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_8[25:0], 3'b000}));



  assign adder_add_cast_20 = {sum7[30], sum7};
  assign adder_add_cast_21 = {{2{product9[28]}}, product9};
  assign adder_add_cast_22 = {adder_add_cast_21[30], adder_add_cast_21};
  assign adder_add_temp_6 = adder_add_cast_20 + adder_add_cast_22;
  assign sum8 = ((adder_add_temp_6[31] == 1'b0) && (adder_add_temp_6[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_6[31] == 1'b1) && (adder_add_temp_6[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_6[30:0])));



  assign delay_pipeline_8 = delay_pipeline_1[8];

  assign multiplier_mul_temp_9 = delay_pipeline_8 * Discrete_FIR_Filter_coeff_9;
  assign product10 = ((multiplier_mul_temp_9[27] == 1'b0) && (multiplier_mul_temp_9[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_9[27] == 1'b1) && (multiplier_mul_temp_9[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_9[25:0], 3'b000}));



  assign adder_add_cast_23 = {sum8[30], sum8};
  assign adder_add_cast_24 = {{2{product10[28]}}, product10};
  assign adder_add_cast_25 = {adder_add_cast_24[30], adder_add_cast_24};
  assign adder_add_temp_7 = adder_add_cast_23 + adder_add_cast_25;
  assign sum9 = ((adder_add_temp_7[31] == 1'b0) && (adder_add_temp_7[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_7[31] == 1'b1) && (adder_add_temp_7[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_7[30:0])));



  assign delay_pipeline_9 = delay_pipeline_1[9];

  assign multiplier_mul_temp_10 = delay_pipeline_9 * Discrete_FIR_Filter_coeff_10;
  assign product11 = ((multiplier_mul_temp_10[27] == 1'b0) && (multiplier_mul_temp_10[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_10[27] == 1'b1) && (multiplier_mul_temp_10[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_10[25:0], 3'b000}));



  assign adder_add_cast_26 = {sum9[30], sum9};
  assign adder_add_cast_27 = {{2{product11[28]}}, product11};
  assign adder_add_cast_28 = {adder_add_cast_27[30], adder_add_cast_27};
  assign adder_add_temp_8 = adder_add_cast_26 + adder_add_cast_28;
  assign sum10 = ((adder_add_temp_8[31] == 1'b0) && (adder_add_temp_8[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_8[31] == 1'b1) && (adder_add_temp_8[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_8[30:0])));



  assign delay_pipeline_10 = delay_pipeline_1[10];

  assign multiplier_mul_temp_11 = delay_pipeline_10 * Discrete_FIR_Filter_coeff_11;
  assign product12 = ((multiplier_mul_temp_11[27] == 1'b0) && (multiplier_mul_temp_11[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_11[27] == 1'b1) && (multiplier_mul_temp_11[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_11[25:0], 3'b000}));



  assign adder_add_cast_29 = {sum10[30], sum10};
  assign adder_add_cast_30 = {{2{product12[28]}}, product12};
  assign adder_add_cast_31 = {adder_add_cast_30[30], adder_add_cast_30};
  assign adder_add_temp_9 = adder_add_cast_29 + adder_add_cast_31;
  assign sum11 = ((adder_add_temp_9[31] == 1'b0) && (adder_add_temp_9[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_9[31] == 1'b1) && (adder_add_temp_9[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_9[30:0])));



  assign delay_pipeline_11 = delay_pipeline_1[11];

  assign multiplier_mul_temp_12 = delay_pipeline_11 * Discrete_FIR_Filter_coeff_12;
  assign product13 = ((multiplier_mul_temp_12[27] == 1'b0) && (multiplier_mul_temp_12[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_12[27] == 1'b1) && (multiplier_mul_temp_12[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_12[25:0], 3'b000}));



  assign adder_add_cast_32 = {sum11[30], sum11};
  assign adder_add_cast_33 = {{2{product13[28]}}, product13};
  assign adder_add_cast_34 = {adder_add_cast_33[30], adder_add_cast_33};
  assign adder_add_temp_10 = adder_add_cast_32 + adder_add_cast_34;
  assign sum12 = ((adder_add_temp_10[31] == 1'b0) && (adder_add_temp_10[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_10[31] == 1'b1) && (adder_add_temp_10[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_10[30:0])));



  assign delay_pipeline_12 = delay_pipeline_1[12];

  assign multiplier_mul_temp_13 = delay_pipeline_12 * Discrete_FIR_Filter_coeff_13;
  assign product14 = ((multiplier_mul_temp_13[27] == 1'b0) && (multiplier_mul_temp_13[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_13[27] == 1'b1) && (multiplier_mul_temp_13[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_13[25:0], 3'b000}));



  assign adder_add_cast_35 = {sum12[30], sum12};
  assign adder_add_cast_36 = {{2{product14[28]}}, product14};
  assign adder_add_cast_37 = {adder_add_cast_36[30], adder_add_cast_36};
  assign adder_add_temp_11 = adder_add_cast_35 + adder_add_cast_37;
  assign sum13 = ((adder_add_temp_11[31] == 1'b0) && (adder_add_temp_11[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_11[31] == 1'b1) && (adder_add_temp_11[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_11[30:0])));



  assign delay_pipeline_13 = delay_pipeline_1[13];

  assign multiplier_mul_temp_14 = delay_pipeline_13 * Discrete_FIR_Filter_coeff_14;
  assign product15 = ((multiplier_mul_temp_14[27] == 1'b0) && (multiplier_mul_temp_14[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_14[27] == 1'b1) && (multiplier_mul_temp_14[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_14[25:0], 3'b000}));



  assign adder_add_cast_38 = {sum13[30], sum13};
  assign adder_add_cast_39 = {{2{product15[28]}}, product15};
  assign adder_add_cast_40 = {adder_add_cast_39[30], adder_add_cast_39};
  assign adder_add_temp_12 = adder_add_cast_38 + adder_add_cast_40;
  assign sum14 = ((adder_add_temp_12[31] == 1'b0) && (adder_add_temp_12[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_12[31] == 1'b1) && (adder_add_temp_12[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_12[30:0])));



  assign delay_pipeline_14 = delay_pipeline_1[14];

  assign multiplier_mul_temp_15 = delay_pipeline_14 * Discrete_FIR_Filter_coeff_15;
  assign product16 = ((multiplier_mul_temp_15[27] == 1'b0) && (multiplier_mul_temp_15[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_15[27] == 1'b1) && (multiplier_mul_temp_15[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_15[25:0], 3'b000}));



  assign adder_add_cast_41 = {sum14[30], sum14};
  assign adder_add_cast_42 = {{2{product16[28]}}, product16};
  assign adder_add_cast_43 = {adder_add_cast_42[30], adder_add_cast_42};
  assign adder_add_temp_13 = adder_add_cast_41 + adder_add_cast_43;
  assign sum15 = ((adder_add_temp_13[31] == 1'b0) && (adder_add_temp_13[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_13[31] == 1'b1) && (adder_add_temp_13[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_13[30:0])));



  assign delay_pipeline_15 = delay_pipeline_1[15];

  assign multiplier_mul_temp_16 = delay_pipeline_15 * Discrete_FIR_Filter_coeff_16;
  assign product17 = ((multiplier_mul_temp_16[27] == 1'b0) && (multiplier_mul_temp_16[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_16[27] == 1'b1) && (multiplier_mul_temp_16[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_16[25:0], 3'b000}));



  assign adder_add_cast_44 = {sum15[30], sum15};
  assign adder_add_cast_45 = {{2{product17[28]}}, product17};
  assign adder_add_cast_46 = {adder_add_cast_45[30], adder_add_cast_45};
  assign adder_add_temp_14 = adder_add_cast_44 + adder_add_cast_46;
  assign sum16 = ((adder_add_temp_14[31] == 1'b0) && (adder_add_temp_14[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_14[31] == 1'b1) && (adder_add_temp_14[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_14[30:0])));



  assign delay_pipeline_16 = delay_pipeline_1[16];

  assign multiplier_mul_temp_17 = delay_pipeline_16 * Discrete_FIR_Filter_coeff_17;
  assign product18 = ((multiplier_mul_temp_17[27] == 1'b0) && (multiplier_mul_temp_17[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_17[27] == 1'b1) && (multiplier_mul_temp_17[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_17[25:0], 3'b000}));



  assign adder_add_cast_47 = {sum16[30], sum16};
  assign adder_add_cast_48 = {{2{product18[28]}}, product18};
  assign adder_add_cast_49 = {adder_add_cast_48[30], adder_add_cast_48};
  assign adder_add_temp_15 = adder_add_cast_47 + adder_add_cast_49;
  assign sum17 = ((adder_add_temp_15[31] == 1'b0) && (adder_add_temp_15[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_15[31] == 1'b1) && (adder_add_temp_15[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_15[30:0])));



  assign delay_pipeline_17 = delay_pipeline_1[17];

  assign multiplier_mul_temp_18 = delay_pipeline_17 * Discrete_FIR_Filter_coeff_18;
  assign product19 = ((multiplier_mul_temp_18[27] == 1'b0) && (multiplier_mul_temp_18[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_18[27] == 1'b1) && (multiplier_mul_temp_18[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_18[25:0], 3'b000}));



  assign adder_add_cast_50 = {sum17[30], sum17};
  assign adder_add_cast_51 = {{2{product19[28]}}, product19};
  assign adder_add_cast_52 = {adder_add_cast_51[30], adder_add_cast_51};
  assign adder_add_temp_16 = adder_add_cast_50 + adder_add_cast_52;
  assign sum18 = ((adder_add_temp_16[31] == 1'b0) && (adder_add_temp_16[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_16[31] == 1'b1) && (adder_add_temp_16[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_16[30:0])));



  assign delay_pipeline_18 = delay_pipeline_1[18];

  assign multiplier_mul_temp_19 = delay_pipeline_18 * Discrete_FIR_Filter_coeff_19;
  assign product20 = ((multiplier_mul_temp_19[27] == 1'b0) && (multiplier_mul_temp_19[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_19[27] == 1'b1) && (multiplier_mul_temp_19[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_19[25:0], 3'b000}));



  assign adder_add_cast_53 = {sum18[30], sum18};
  assign adder_add_cast_54 = {{2{product20[28]}}, product20};
  assign adder_add_cast_55 = {adder_add_cast_54[30], adder_add_cast_54};
  assign adder_add_temp_17 = adder_add_cast_53 + adder_add_cast_55;
  assign sum19 = ((adder_add_temp_17[31] == 1'b0) && (adder_add_temp_17[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_17[31] == 1'b1) && (adder_add_temp_17[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_17[30:0])));



  assign delay_pipeline_19 = delay_pipeline_1[19];

  assign multiplier_mul_temp_20 = delay_pipeline_19 * Discrete_FIR_Filter_coeff_20;
  assign product21 = ((multiplier_mul_temp_20[27] == 1'b0) && (multiplier_mul_temp_20[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_20[27] == 1'b1) && (multiplier_mul_temp_20[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_20[25:0], 3'b000}));



  assign adder_add_cast_56 = {sum19[30], sum19};
  assign adder_add_cast_57 = {{2{product21[28]}}, product21};
  assign adder_add_cast_58 = {adder_add_cast_57[30], adder_add_cast_57};
  assign adder_add_temp_18 = adder_add_cast_56 + adder_add_cast_58;
  assign sum20 = ((adder_add_temp_18[31] == 1'b0) && (adder_add_temp_18[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_18[31] == 1'b1) && (adder_add_temp_18[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_18[30:0])));



  assign delay_pipeline_20 = delay_pipeline_1[20];

  assign multiplier_mul_temp_21 = delay_pipeline_20 * Discrete_FIR_Filter_coeff_21;
  assign product22 = ((multiplier_mul_temp_21[27] == 1'b0) && (multiplier_mul_temp_21[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_21[27] == 1'b1) && (multiplier_mul_temp_21[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_21[25:0], 3'b000}));



  assign adder_add_cast_59 = {sum20[30], sum20};
  assign adder_add_cast_60 = {{2{product22[28]}}, product22};
  assign adder_add_cast_61 = {adder_add_cast_60[30], adder_add_cast_60};
  assign adder_add_temp_19 = adder_add_cast_59 + adder_add_cast_61;
  assign sum21 = ((adder_add_temp_19[31] == 1'b0) && (adder_add_temp_19[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_19[31] == 1'b1) && (adder_add_temp_19[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_19[30:0])));



  assign delay_pipeline_21 = delay_pipeline_1[21];

  assign multiplier_mul_temp_22 = delay_pipeline_21 * Discrete_FIR_Filter_coeff_22;
  assign product23 = ((multiplier_mul_temp_22[27] == 1'b0) && (multiplier_mul_temp_22[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_22[27] == 1'b1) && (multiplier_mul_temp_22[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_22[25:0], 3'b000}));



  assign adder_add_cast_62 = {sum21[30], sum21};
  assign adder_add_cast_63 = {{2{product23[28]}}, product23};
  assign adder_add_cast_64 = {adder_add_cast_63[30], adder_add_cast_63};
  assign adder_add_temp_20 = adder_add_cast_62 + adder_add_cast_64;
  assign sum22 = ((adder_add_temp_20[31] == 1'b0) && (adder_add_temp_20[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_20[31] == 1'b1) && (adder_add_temp_20[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_20[30:0])));



  assign delay_pipeline_22 = delay_pipeline_1[22];

  assign multiplier_mul_temp_23 = delay_pipeline_22 * Discrete_FIR_Filter_coeff_23;
  assign product24 = ((multiplier_mul_temp_23[27] == 1'b0) && (multiplier_mul_temp_23[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_23[27] == 1'b1) && (multiplier_mul_temp_23[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_23[25:0], 3'b000}));



  assign adder_add_cast_65 = {sum22[30], sum22};
  assign adder_add_cast_66 = {{2{product24[28]}}, product24};
  assign adder_add_cast_67 = {adder_add_cast_66[30], adder_add_cast_66};
  assign adder_add_temp_21 = adder_add_cast_65 + adder_add_cast_67;
  assign sum23 = ((adder_add_temp_21[31] == 1'b0) && (adder_add_temp_21[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_21[31] == 1'b1) && (adder_add_temp_21[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_21[30:0])));



  assign delay_pipeline_23 = delay_pipeline_1[23];

  assign multiplier_mul_temp_24 = delay_pipeline_23 * Discrete_FIR_Filter_coeff_24;
  assign product25 = ((multiplier_mul_temp_24[27] == 1'b0) && (multiplier_mul_temp_24[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_24[27] == 1'b1) && (multiplier_mul_temp_24[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_24[25:0], 3'b000}));



  assign adder_add_cast_68 = {sum23[30], sum23};
  assign adder_add_cast_69 = {{2{product25[28]}}, product25};
  assign adder_add_cast_70 = {adder_add_cast_69[30], adder_add_cast_69};
  assign adder_add_temp_22 = adder_add_cast_68 + adder_add_cast_70;
  assign sum24 = ((adder_add_temp_22[31] == 1'b0) && (adder_add_temp_22[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_22[31] == 1'b1) && (adder_add_temp_22[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_22[30:0])));



  assign delay_pipeline_24 = delay_pipeline_1[24];

  assign multiplier_mul_temp_25 = delay_pipeline_24 * Discrete_FIR_Filter_coeff_25;
  assign product26 = ((multiplier_mul_temp_25[27] == 1'b0) && (multiplier_mul_temp_25[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_25[27] == 1'b1) && (multiplier_mul_temp_25[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_25[25:0], 3'b000}));



  assign adder_add_cast_71 = {sum24[30], sum24};
  assign adder_add_cast_72 = {{2{product26[28]}}, product26};
  assign adder_add_cast_73 = {adder_add_cast_72[30], adder_add_cast_72};
  assign adder_add_temp_23 = adder_add_cast_71 + adder_add_cast_73;
  assign sum25 = ((adder_add_temp_23[31] == 1'b0) && (adder_add_temp_23[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_23[31] == 1'b1) && (adder_add_temp_23[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_23[30:0])));



  assign delay_pipeline_25 = delay_pipeline_1[25];

  assign multiplier_mul_temp_26 = delay_pipeline_25 * Discrete_FIR_Filter_coeff_26;
  assign product27 = ((multiplier_mul_temp_26[27] == 1'b0) && (multiplier_mul_temp_26[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_26[27] == 1'b1) && (multiplier_mul_temp_26[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_26[25:0], 3'b000}));



  assign adder_add_cast_74 = {sum25[30], sum25};
  assign adder_add_cast_75 = {{2{product27[28]}}, product27};
  assign adder_add_cast_76 = {adder_add_cast_75[30], adder_add_cast_75};
  assign adder_add_temp_24 = adder_add_cast_74 + adder_add_cast_76;
  assign sum26 = ((adder_add_temp_24[31] == 1'b0) && (adder_add_temp_24[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_24[31] == 1'b1) && (adder_add_temp_24[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_24[30:0])));



  assign delay_pipeline_26 = delay_pipeline_1[26];

  assign multiplier_mul_temp_27 = delay_pipeline_26 * Discrete_FIR_Filter_coeff_27;
  assign product28 = ((multiplier_mul_temp_27[27] == 1'b0) && (multiplier_mul_temp_27[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_27[27] == 1'b1) && (multiplier_mul_temp_27[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_27[25:0], 3'b000}));



  assign adder_add_cast_77 = {sum26[30], sum26};
  assign adder_add_cast_78 = {{2{product28[28]}}, product28};
  assign adder_add_cast_79 = {adder_add_cast_78[30], adder_add_cast_78};
  assign adder_add_temp_25 = adder_add_cast_77 + adder_add_cast_79;
  assign sum27 = ((adder_add_temp_25[31] == 1'b0) && (adder_add_temp_25[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_25[31] == 1'b1) && (adder_add_temp_25[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_25[30:0])));



  assign delay_pipeline_27 = delay_pipeline_1[27];

  assign multiplier_mul_temp_28 = delay_pipeline_27 * Discrete_FIR_Filter_coeff_28;
  assign product29 = ((multiplier_mul_temp_28[27] == 1'b0) && (multiplier_mul_temp_28[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_28[27] == 1'b1) && (multiplier_mul_temp_28[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_28[25:0], 3'b000}));



  assign adder_add_cast_80 = {sum27[30], sum27};
  assign adder_add_cast_81 = {{2{product29[28]}}, product29};
  assign adder_add_cast_82 = {adder_add_cast_81[30], adder_add_cast_81};
  assign adder_add_temp_26 = adder_add_cast_80 + adder_add_cast_82;
  assign sum28 = ((adder_add_temp_26[31] == 1'b0) && (adder_add_temp_26[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_26[31] == 1'b1) && (adder_add_temp_26[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_26[30:0])));



  assign delay_pipeline_28 = delay_pipeline_1[28];

  assign multiplier_mul_temp_29 = delay_pipeline_28 * Discrete_FIR_Filter_coeff_29;
  assign product30 = ((multiplier_mul_temp_29[27] == 1'b0) && (multiplier_mul_temp_29[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_29[27] == 1'b1) && (multiplier_mul_temp_29[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_29[25:0], 3'b000}));



  assign adder_add_cast_83 = {sum28[30], sum28};
  assign adder_add_cast_84 = {{2{product30[28]}}, product30};
  assign adder_add_cast_85 = {adder_add_cast_84[30], adder_add_cast_84};
  assign adder_add_temp_27 = adder_add_cast_83 + adder_add_cast_85;
  assign sum29 = ((adder_add_temp_27[31] == 1'b0) && (adder_add_temp_27[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_27[31] == 1'b1) && (adder_add_temp_27[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_27[30:0])));



  assign delay_pipeline_29 = delay_pipeline_1[29];

  assign multiplier_mul_temp_30 = delay_pipeline_29 * Discrete_FIR_Filter_coeff_30;
  assign product31 = ((multiplier_mul_temp_30[27] == 1'b0) && (multiplier_mul_temp_30[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_30[27] == 1'b1) && (multiplier_mul_temp_30[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_30[25:0], 3'b000}));



  assign adder_add_cast_86 = {sum29[30], sum29};
  assign adder_add_cast_87 = {{2{product31[28]}}, product31};
  assign adder_add_cast_88 = {adder_add_cast_87[30], adder_add_cast_87};
  assign adder_add_temp_28 = adder_add_cast_86 + adder_add_cast_88;
  assign sum30 = ((adder_add_temp_28[31] == 1'b0) && (adder_add_temp_28[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_28[31] == 1'b1) && (adder_add_temp_28[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_28[30:0])));



  assign delay_pipeline_30 = delay_pipeline_1[30];

  assign multiplier_mul_temp_31 = delay_pipeline_30 * Discrete_FIR_Filter_coeff_31;
  assign product32 = ((multiplier_mul_temp_31[27] == 1'b0) && (multiplier_mul_temp_31[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_31[27] == 1'b1) && (multiplier_mul_temp_31[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_31[25:0], 3'b000}));



  assign adder_add_cast_89 = {sum30[30], sum30};
  assign adder_add_cast_90 = {{2{product32[28]}}, product32};
  assign adder_add_cast_91 = {adder_add_cast_90[30], adder_add_cast_90};
  assign adder_add_temp_29 = adder_add_cast_89 + adder_add_cast_91;
  assign sum31 = ((adder_add_temp_29[31] == 1'b0) && (adder_add_temp_29[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_29[31] == 1'b1) && (adder_add_temp_29[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_29[30:0])));



  assign delay_pipeline_31 = delay_pipeline_1[31];

  assign multiplier_mul_temp_32 = delay_pipeline_31 * Discrete_FIR_Filter_coeff_32;
  assign product33 = ((multiplier_mul_temp_32[27] == 1'b0) && (multiplier_mul_temp_32[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_32[27] == 1'b1) && (multiplier_mul_temp_32[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_32[25:0], 3'b000}));



  assign adder_add_cast_92 = {sum31[30], sum31};
  assign adder_add_cast_93 = {{2{product33[28]}}, product33};
  assign adder_add_cast_94 = {adder_add_cast_93[30], adder_add_cast_93};
  assign adder_add_temp_30 = adder_add_cast_92 + adder_add_cast_94;
  assign sum32 = ((adder_add_temp_30[31] == 1'b0) && (adder_add_temp_30[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_30[31] == 1'b1) && (adder_add_temp_30[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_30[30:0])));



  assign delay_pipeline_32 = delay_pipeline_1[32];

  assign multiplier_mul_temp_33 = delay_pipeline_32 * Discrete_FIR_Filter_coeff_33;
  assign product34 = ((multiplier_mul_temp_33[27] == 1'b0) && (multiplier_mul_temp_33[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_33[27] == 1'b1) && (multiplier_mul_temp_33[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_33[25:0], 3'b000}));



  assign adder_add_cast_95 = {sum32[30], sum32};
  assign adder_add_cast_96 = {{2{product34[28]}}, product34};
  assign adder_add_cast_97 = {adder_add_cast_96[30], adder_add_cast_96};
  assign adder_add_temp_31 = adder_add_cast_95 + adder_add_cast_97;
  assign sum33 = ((adder_add_temp_31[31] == 1'b0) && (adder_add_temp_31[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_31[31] == 1'b1) && (adder_add_temp_31[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_31[30:0])));



  assign delay_pipeline_33 = delay_pipeline_1[33];

  assign multiplier_mul_temp_34 = delay_pipeline_33 * Discrete_FIR_Filter_coeff_34;
  assign product35 = ((multiplier_mul_temp_34[27] == 1'b0) && (multiplier_mul_temp_34[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_34[27] == 1'b1) && (multiplier_mul_temp_34[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_34[25:0], 3'b000}));



  assign adder_add_cast_98 = {sum33[30], sum33};
  assign adder_add_cast_99 = {{2{product35[28]}}, product35};
  assign adder_add_cast_100 = {adder_add_cast_99[30], adder_add_cast_99};
  assign adder_add_temp_32 = adder_add_cast_98 + adder_add_cast_100;
  assign sum34 = ((adder_add_temp_32[31] == 1'b0) && (adder_add_temp_32[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_32[31] == 1'b1) && (adder_add_temp_32[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_32[30:0])));



  assign delay_pipeline_34 = delay_pipeline_1[34];

  assign multiplier_mul_temp_35 = delay_pipeline_34 * Discrete_FIR_Filter_coeff_35;
  assign product36 = ((multiplier_mul_temp_35[27] == 1'b0) && (multiplier_mul_temp_35[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_35[27] == 1'b1) && (multiplier_mul_temp_35[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_35[25:0], 3'b000}));



  assign adder_add_cast_101 = {sum34[30], sum34};
  assign adder_add_cast_102 = {{2{product36[28]}}, product36};
  assign adder_add_cast_103 = {adder_add_cast_102[30], adder_add_cast_102};
  assign adder_add_temp_33 = adder_add_cast_101 + adder_add_cast_103;
  assign sum35 = ((adder_add_temp_33[31] == 1'b0) && (adder_add_temp_33[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_33[31] == 1'b1) && (adder_add_temp_33[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_33[30:0])));



  assign delay_pipeline_35 = delay_pipeline_1[35];

  assign multiplier_mul_temp_36 = delay_pipeline_35 * Discrete_FIR_Filter_coeff_36;
  assign product37 = ((multiplier_mul_temp_36[27] == 1'b0) && (multiplier_mul_temp_36[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_36[27] == 1'b1) && (multiplier_mul_temp_36[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_36[25:0], 3'b000}));



  assign adder_add_cast_104 = {sum35[30], sum35};
  assign adder_add_cast_105 = {{2{product37[28]}}, product37};
  assign adder_add_cast_106 = {adder_add_cast_105[30], adder_add_cast_105};
  assign adder_add_temp_34 = adder_add_cast_104 + adder_add_cast_106;
  assign sum36 = ((adder_add_temp_34[31] == 1'b0) && (adder_add_temp_34[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_34[31] == 1'b1) && (adder_add_temp_34[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_34[30:0])));



  assign delay_pipeline_36 = delay_pipeline_1[36];

  assign multiplier_mul_temp_37 = delay_pipeline_36 * Discrete_FIR_Filter_coeff_37;
  assign product38 = ((multiplier_mul_temp_37[27] == 1'b0) && (multiplier_mul_temp_37[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_37[27] == 1'b1) && (multiplier_mul_temp_37[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_37[25:0], 3'b000}));



  assign adder_add_cast_107 = {sum36[30], sum36};
  assign adder_add_cast_108 = {{2{product38[28]}}, product38};
  assign adder_add_cast_109 = {adder_add_cast_108[30], adder_add_cast_108};
  assign adder_add_temp_35 = adder_add_cast_107 + adder_add_cast_109;
  assign sum37 = ((adder_add_temp_35[31] == 1'b0) && (adder_add_temp_35[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_35[31] == 1'b1) && (adder_add_temp_35[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_35[30:0])));



  assign delay_pipeline_37 = delay_pipeline_1[37];

  assign multiplier_mul_temp_38 = delay_pipeline_37 * Discrete_FIR_Filter_coeff_38;
  assign product39 = ((multiplier_mul_temp_38[27] == 1'b0) && (multiplier_mul_temp_38[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_38[27] == 1'b1) && (multiplier_mul_temp_38[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_38[25:0], 3'b000}));



  assign adder_add_cast_110 = {sum37[30], sum37};
  assign adder_add_cast_111 = {{2{product39[28]}}, product39};
  assign adder_add_cast_112 = {adder_add_cast_111[30], adder_add_cast_111};
  assign adder_add_temp_36 = adder_add_cast_110 + adder_add_cast_112;
  assign sum38 = ((adder_add_temp_36[31] == 1'b0) && (adder_add_temp_36[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_36[31] == 1'b1) && (adder_add_temp_36[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_36[30:0])));



  assign delay_pipeline_38 = delay_pipeline_1[38];

  assign multiplier_mul_temp_39 = delay_pipeline_38 * Discrete_FIR_Filter_coeff_39;
  assign product40 = ((multiplier_mul_temp_39[27] == 1'b0) && (multiplier_mul_temp_39[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_39[27] == 1'b1) && (multiplier_mul_temp_39[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_39[25:0], 3'b000}));



  assign adder_add_cast_113 = {sum38[30], sum38};
  assign adder_add_cast_114 = {{2{product40[28]}}, product40};
  assign adder_add_cast_115 = {adder_add_cast_114[30], adder_add_cast_114};
  assign adder_add_temp_37 = adder_add_cast_113 + adder_add_cast_115;
  assign sum39 = ((adder_add_temp_37[31] == 1'b0) && (adder_add_temp_37[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_37[31] == 1'b1) && (adder_add_temp_37[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_37[30:0])));



  assign delay_pipeline_39 = delay_pipeline_1[39];

  assign multiplier_mul_temp_40 = delay_pipeline_39 * Discrete_FIR_Filter_coeff_40;
  assign product41 = ((multiplier_mul_temp_40[27] == 1'b0) && (multiplier_mul_temp_40[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_40[27] == 1'b1) && (multiplier_mul_temp_40[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_40[25:0], 3'b000}));



  assign adder_add_cast_116 = {sum39[30], sum39};
  assign adder_add_cast_117 = {{2{product41[28]}}, product41};
  assign adder_add_cast_118 = {adder_add_cast_117[30], adder_add_cast_117};
  assign adder_add_temp_38 = adder_add_cast_116 + adder_add_cast_118;
  assign sum40 = ((adder_add_temp_38[31] == 1'b0) && (adder_add_temp_38[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_38[31] == 1'b1) && (adder_add_temp_38[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_38[30:0])));



  assign delay_pipeline_40 = delay_pipeline_1[40];

  assign multiplier_mul_temp_41 = delay_pipeline_40 * Discrete_FIR_Filter_coeff_41;
  assign product42 = ((multiplier_mul_temp_41[27] == 1'b0) && (multiplier_mul_temp_41[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_41[27] == 1'b1) && (multiplier_mul_temp_41[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_41[25:0], 3'b000}));



  assign adder_add_cast_119 = {sum40[30], sum40};
  assign adder_add_cast_120 = {{2{product42[28]}}, product42};
  assign adder_add_cast_121 = {adder_add_cast_120[30], adder_add_cast_120};
  assign adder_add_temp_39 = adder_add_cast_119 + adder_add_cast_121;
  assign sum41 = ((adder_add_temp_39[31] == 1'b0) && (adder_add_temp_39[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_39[31] == 1'b1) && (adder_add_temp_39[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_39[30:0])));



  assign delay_pipeline_41 = delay_pipeline_1[41];

  assign multiplier_mul_temp_42 = delay_pipeline_41 * Discrete_FIR_Filter_coeff_42;
  assign product43 = ((multiplier_mul_temp_42[27] == 1'b0) && (multiplier_mul_temp_42[26:25] != 2'b00) ? 29'sb01111111111111111111111111111 :
              ((multiplier_mul_temp_42[27] == 1'b1) && (multiplier_mul_temp_42[26:25] != 2'b11) ? 29'sb10000000000000000000000000000 :
              {multiplier_mul_temp_42[25:0], 3'b000}));



  assign adder_add_cast_122 = {sum41[30], sum41};
  assign adder_add_cast_123 = {{2{product43[28]}}, product43};
  assign adder_add_cast_124 = {adder_add_cast_123[30], adder_add_cast_123};
  assign adder_add_temp_40 = adder_add_cast_122 + adder_add_cast_124;
  assign sum42 = ((adder_add_temp_40[31] == 1'b0) && (adder_add_temp_40[30] != 1'b0) ? 31'sb0111111111111111111111111111111 :
              ((adder_add_temp_40[31] == 1'b1) && (adder_add_temp_40[30] != 1'b1) ? 31'sb1000000000000000000000000000000 :
              $signed(adder_add_temp_40[30:0])));



  assign output_typeconvert = sum42[30:16];



  assign Discrete_FIR_Filter_out = output_typeconvert;

endmodule  // Discrete_FIR_Filter

